version: 2
jobs:
  get_data:
      machine:
        # Ubuntu 14.04 with Docker 17.10.0-ce
        image: circleci/classic:201711-01
      environment:
        - TEST_DATA_NAME: "ds114_test2_freesurfer_precomp_v6.0.0"
        - TEST_DATA_URL: "https://osf.io/yhzzj/?action=download&version=1"
      working_directory: /home/circleci/data
      steps:
        - restore_cache:
            keys:
            - data-v1-{{ epoch }}
            - data-v1-
        - run:
            name: Get test data
            command: |
              mkdir -p /tmp/data
              echo "looking for ${TEST_DATA_NAME}"
              ls /tmp/data/${TEST_DATA_NAME}
              if [[ ! -d /tmp/data/${TEST_DATA_NAME} ]]; then
                wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q \
                  -O ${TEST_DATA_NAME}.tar.gz "${TEST_DATA_URL}"
                tar xvzf ${TEST_DATA_NAME}.tar.gz -C /tmp/data/
              else
                echo "Dataset ${TEST_DATA_NAME} was cached"
              fi
        - run:
            name: ls1
            command: |
              echo ${TEST_DATA_NAME}
              ls /tmp/data
              if [[ ! -d /tmp/data/${TEST_DATA_NAME} ]]; then
                echo "data not found"
              else
                echo "data found"
              fi
        - persist_to_workspace:
            root: /tmp/
            paths:
              - data
        - run:
            name: ls2
            command: |
              if [[ ! -d /tmp/data/${TEST_DATA_NAME} ]]; then
                echo "data not found"
              else
                echo "data found"
              fi
        - save_cache:
           key: data-v1-{{ epoch }}
           paths:
              - /tmp/data


  build:
    docker:
      - image: docker:18.01.0-ce-git
    working_directory: /tmp/docker
    steps:
      - run:
          name: Install parallel gzip
          command: apk add --no-cache pigz
      - restore_cache:
          keys:
            - docker-v2-{{ .Branch }}-{{ epoch }}
            - docker-v2-{{ .Branch }}-
            - docker-v2-master-
            - docker-v2-
          paths:
            - /tmp/cache/docker.tar.gz
      - checkout
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
            fi
            docker images
      - run:
          name: get version
          command: |
            git describe --tags --always > version
            cat version
      - run:
          name: Build Docker image
          no_output_timeout: 60m
          command: |
            docker images
            set +o pipefail
            docker build --cache-from=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} \
            -t ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest .
            docker images
      - run:
          name: Docker save
          no_output_timeout: 40m
          command: |
            mkdir -p /tmp/cache
            set +o pipefail
            docker save ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest \
              | pigz -2 -p 3 > /tmp/cache/docker.tar.gz
      - persist_to_workspace:
          root: /tmp
          paths:
            - cache/docker.tar.gz


  update_cache:
    machine:
      # Ubuntu 14.04 with Docker 17.10.0-ce
      image: circleci/classic:201711-01
    working_directory: /home/circleci/updatecache
    steps:
      - attach_workspace:
          at: /tmp
      - save_cache:
         key: docker-v2-{{ .Branch }}-{{ epoch }}
         paths:
            - /tmp/cache/docker.tar.gz

  test:
    machine:
      # Ubuntu 14.04 with Docker 17.10.0-ce
      image: circleci/classic:201711-01
    working_directory: /home/circleci/tests
    environment:
      - TEST_DATA_DIR: "/tmp/data/ds114_test2_freesurfer_precomp_v6.0.0/"
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Install parallel gzip
          command: sudo apt-get update && sudo apt-get install pigz
      - run:
          name: load docker images
          command: |
            set +o pipefail
            pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
            docker images
      - run:
          name: print version
          command: |
            docker run -ti --rm --read-only ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest --version
      - run:
          name: print help
          command: |
            docker run -ti --rm --read-only ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest -h
      - run:
          name: test qcache
          command: |
            docker run -ti --rm --read-only -v /tmp/data/bids_dataset -v ${TEST_DATA_DIR}:/outputs ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest /bids_dataset /outputs participant --participant_label 01 --license_key="~/test.key" --workflow qcache --measurements thickness
            cat ${TEST_DATA_DIR}/ds114_test2_freesurfer/sub-01_ses-retest.long.sub-01/surf/rh.thickness.fwhm0.fsaverage.mgh
            cat ${TEST_DATA_DIR}/sub-01_ses-retest/surf/rh.thickness.fwhm0.fsaverage.mgh

  deploy:
    machine:
      image: circleci/classic:201711-01
    working_directory: /home/circleci/deploy
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Install parallel gzip
          command: sudo apt-get update && sudo apt-get install pigz
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
            docker images
      - run:
          name: Deploy to Docker Hub
          no_output_timeout: 40m
          command: |
            if [[ -n "$DOCKER_PASS" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker tag ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:latest ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:$CIRCLE_TAG
              docker push ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}:$CIRCLE_TAG
            fi


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - get_data
      - build
      - update_cache:
          requires:
            - build
      - test:
          requires:
            - get_data
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
